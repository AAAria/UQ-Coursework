{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MATH3202_A2","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Pfn-TrNnJUsf"},"source":["# Comm 6\n","\n","Thank you for your help in optimising the use of our generators and network. This has enabled us to receive a capital budget for improving our production and delivery of electricity in the region.\n","\n","Going forward, we would like you to ignore our previous limit on changes to generator output across the day, as we think our new planning will help address that issue. You can base your future proposals on your response to our Communication 4 (with a cost of $3086102).\n","\n","Firstly, we have funds to increase the capacity of three of our transmission lines by 50 MW (to 138 MW). Which lines we should increase?\n"]},{"cell_type":"markdown","metadata":{"id":"7hmGtfyLmoHO"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3085113\n","\n","**Transmission lines need to be updated:** \\\n","122\n","174\n","203"]},{"cell_type":"markdown","metadata":{"id":"JkAUBfUnJZfw"},"source":["## Formulas\n","\n","### New Data:\n","$\\text{LimitIncrease} \\quad$ increase the capacity of the three transmission lines by 50 MW\n","### New Variable:\n","$\n","  I_a =\n","  \\begin{cases}\n","    1, & \\text{if we increase the limit of arc  } a \\in \\text{Arcs} \\\\\n","    0, & \\text{if not}\n","  \\end{cases}       \n","$\n","\n","### New and Revisted Constraint:\n","$$ \\sum_{a \\in \\text{Arcs}} I_a = 3 $$\n","$$ X_{a,t} \\leq \\text{LowLimit} + \\text{LimitIncrease} \\times I_a, \\forall a \\in A \\setminus \\text{Highs}, t \\in T$$\n"]},{"cell_type":"markdown","metadata":{"id":"HaCeOsnLb1LJ"},"source":["# Comm 7\n","\n","We also have funds to build a small gas generator at one of the existing nodes on the network, where there is not already a generator. This generator can supply up to 200 MW at a cost of $69/MWh. Where should we build this generator? Note that it will need to meet any existing demand at the node where it is located.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"NfdnNTYKmxbI"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3016565\n","\n","**Transmission lines need to be updated:** \\\n","174\n","179\n","203\n","\n","**New generator node:** \\\n","10"]},{"cell_type":"markdown","metadata":{"id":"yfPt7T-7cDFc"},"source":["## Formulas\n","\n","### New Data:\n","$ \\text{NewCost} $ cost for the small generator which is \\$69/MWh \\\n","$ \\text{NewSupply} $ capacity of the small generator which is 200 MW\n","\n","### New Variable:\n","$ \\begin{equation*}\n","  \\text{New}_n =\n","  \\begin{cases}\n","    1, & \\text{if we pick } n \\in N \\setminus G \\text{ as the small generator}\\\\\n","    0, & \\text{if not}\n","  \\end{cases}       \n","\\end{equation*} $\n","\n","### New Constraint:\n","$$ \\sum_{n \\in N \\setminus G} \\text{New}_n = 1 $$\n","$$ Y_{n,t} \\leq \\text{NewSupply} \\times \\text{New}_n, \\forall n \\in N \\setminus G, t \\in T $$\n","\n","### Revisited Objective:\n","$$ \\min \\sum_{t \\in T} \\sum_{n \\in G} 4 \\times \\text{Cost}_n \\times Y_{n,t} \n","+ \\sum_{t \\in T} \\sum_{n \\in N \\setminus G} 4 \\times \\text{NewCost} \\times Y_{n,t}$$\n"]},{"cell_type":"markdown","metadata":{"id":"Orevt3b2FiXR"},"source":["# Comm 8\n","\n","Unfortunately the local government has declined our application to build the new generator at Node 10. Could you propose an alternative site we should use?\n","\n"]},{"cell_type":"markdown","metadata":{"id":"yynMabadm7Ny"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3017136\n","\n","**Transmission lines need to be updated:** \\\n","174\n","179\n","203\n","\n","**New generator node:** \\\n","4"]},{"cell_type":"markdown","metadata":{"id":"x8UOijrIFn5o"},"source":["## Formulas\n","\n","### New Constraint:\n","$$ Y_{10,t} = 0, \\forall t \\in T $$"]},{"cell_type":"markdown","metadata":{"id":"X3Vgq3b0wA4X"},"source":["# Comm 9\n","\n","We're excited to let you know that we have the go-ahead to build the gas generator at Node 4. Due to the design of the gas generator, we can only run it during four time periods (16 hours) each day. Given our current demands, which time periods should it be operated?\n"]},{"cell_type":"markdown","metadata":{"id":"wy9iChFcnEF0"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3038124\n","\n","**Transmission lines need to be updated:** \\\n","122\n","174\n","203\n","\n","**New generator node:** \\\n","4\n","\n","**New generator's operating time periods:** \\\n","D2\n","D3\n","D4\n","D5"]},{"cell_type":"markdown","metadata":{"id":"SHF1NGjowC6m"},"source":["## Formulas\n","\n","### New Variable:\n","$\n","  R_t =\n","  \\begin{cases}\n","    1, & \\text{if we run the new small generator during the time period } t \\in T \\\\\n","    0, & \\text{if not}\n","  \\end{cases}       \n","$\n","\n","### New and Constraints:\n","$$ \\sum_{t \\in T} R_t = 4 $$\n","$$ Y_{n,t} \\leq \\text{NewSupply} \\times \\text{New}_n \\times R_t, \\forall n \\in N, t \\in T $$"]},{"cell_type":"markdown","metadata":{"id":"sNt14KqGbBIl"},"source":["# Comm 10\n","\n","In addition to the gas generator, we can also build a solar farm at one of the nodes. This will produce electricity over the day as follows:\n","\n","| Time Period | 0-4 | 4-8 | 8-12 | 12-16 | 16-20 | 20-24 |\n","|:-----------:|:---:|:---:|:----:|-------|-------|-------|\n","| Supply (MW) |  0  |  20 |  120 | 110   | 20    | 0     |\n","\n","The cost of the solar electricity is $42/MWh. Where should we build this solar farm? Note that it will again need to meet any existing demand at the node where it is located.\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"tKLgRj-CnN6d"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$2993082\n","\n","**Transmission lines need to be updated:** \\\n","122\n","174\n","203\n","\n","**New generator node:** \\\n","4\n","\n","**New generator's operating time periods:** \\\n","D1\n","D3\n","D4\n","D5\n","\n","**Solar farm node:** \\\n","1"]},{"cell_type":"markdown","metadata":{"id":"5Zy4yHWebEks"},"source":["## Formulas\n","\n","### New Data:\n","$\\text{SolarSupply}_t \\quad$ supply of solar electricity during time period $t \\in T$ \\\n","$\\text{SolarCost} \\quad $ cost of the solar electricity which is $42/MWh\n","\n","### New Varibale:\n","$ \\text{Solar}_n =\n","  \\begin{cases}\n","    1, & \\text{if we pick } n \\in N \\text{ as the solar farm}\\\\\n","    0, & \\text{if not}\n","  \\end{cases} $ \\\n","$ S_{n,t} \\quad$ solar electricity generated at node $n \\in N$ in time period $t \\in T$\n","\n","### New and Revised Contraints: \n","$$ \\sum_{n \\in N} \\text{Solar}_n = 1 $$\n","\n","$$ S_{n,t} \\leq \\text{SolarSupply} \\times \\text{Solar}_n, \\forall n \\in N, t \\in T $$\n","\n","$$ Y_{n,t} + S_{n,t} + \\sum_{\\substack{a \\in A \\text{ s.t.} \\\\ \\text{Node2}_a = n}} X_{a,t} (1 - \\text{Loss} \\times \\text{Distance}_a) =  \\text{Demand}_{n,t} + \n","\\sum_{\\substack{a \\in A \\text{ s.t.} \\\\ \\text{Node1}_a = n}} X_{a,t} , \\forall n \\in N, t \\in T $$\n","\n","### Revisited Objective:\n","$$ \\min \\sum_{t \\in T} \\sum_{n \\in G} 4 \\times \\text{Cost}_n \\times Y_{n,t} \n","+ \\sum_{t \\in T} \\sum_{n \\in N \\setminus G} 4 \\times \\text{NewCost} \\times Y_{n,t} + \\sum_{t \\in T} \\sum_{n \\in N} 4 \\times \\text{SolarCost} \\times S_{n,t} $$"]},{"cell_type":"markdown","metadata":{"id":"fCrr6jF8x8ph"},"source":["# Comm 11\n","\n","The costs we have given you for our original four generators are rather simplistic. In practice, the generators operate efficiently up to 60% of their capacity but after that they become more expensive to run. We estimate this increase in cost to be 30% on top of the original values we gave you.\n","\n","For example, the generator at Node 12 will run at a cost of $81/MWh when supplying no more than 233.4 MW. Beyond that threshold, it will then cost \\$105.3/MWh to run.\n"]},{"cell_type":"markdown","metadata":{"id":"g3VBSQBOnb6w"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3129662\n","\n","**Transmission lines need to be updated:** \\\n","2\n","179\n","203\n","\n","**New generator node:** \\\n","4\n","\n","**New generator's operating time periods:** \\\n","D2\n","D3\n","D4\n","D5\n","\n","**Solar farm node:** \\\n","43"]},{"cell_type":"markdown","metadata":{"id":"e2-yQnbgfo7b"},"source":["## Formulas\n","\n","### New Data:\n","$\\text{CostIncrease} \\quad$ cost increase for generators operate over their threshold which is 30%\n","\n","### New Varibale:\n","$ U_{n,t} \\quad$ electricity generated at node $n \\in N$ in time period $t \\in T$ under threshold\n","\n","$ O_{n,t} \\quad$ electricity generated at node $n \\in N$ in time period $t \\in T$ over threshold\n","\n","### New and Revised Contraints: \n","$$ U_{n,t} \\leq \\text{Supply}_n \\times 0.6, \\forall n \\in G, t \\in T $$\n","$$ O_{n,t} \\leq \\text{Supply}_n \\times 0.4, \\forall n \\in G, t \\in T $$\n","\n","### Revisited Objective:\n","$$ \\min \\sum_{t \\in T} \\sum_{n \\in G} 4 \\times \\text{Cost}_n \\times U_{n,t}  + \\sum_{t \\in T} \\sum_{n \\in G} 4 \\times 1.3 \\times \\text{Cost}_n \\times O_{n,t} \\\\\n","+ \\sum_{t \\in T} \\sum_{n \\in N \\setminus G} 4 \\times \\text{NewCost} \\times Y_{n,t}\n","+ \\sum_{t \\in T} \\sum_{n \\in N} 4 \\times \\text{SolarCost} \\times S_{n,t} $$\n"]},{"cell_type":"markdown","metadata":{"id":"sxtyNnXvyMO8"},"source":["# Comm 12\n","\n","To counter the increased costs of peak production, we have been working with customers on a scheme where they will commit to reduce their demand by 10% for one time period each day. We can specify the time periods when this will happen for each node but no more than 9 nodes can be reduced during the same time period.\n"]},{"cell_type":"markdown","metadata":{"id":"qEH63Ifznlji"},"source":["## Result\n","\n","**Optimal Cost:** \\\n","$3052747\n","\n","**Transmission lines need to be updated:** \\\n","179\n","198\n","203\n","\n","**New generator node:** \\\n","4\n","\n","**New generator's operating time periods:** \\\n","D2\n","D3\n","D4\n","D5\n","\n","**Solar farm node:** \\\n","17\n","\n","**Nodes for demand reduction in each time period:** \\\n","Please see the table in our latex file. "]},{"cell_type":"markdown","metadata":{"id":"I02mZa4hySRg"},"source":["## Formulas\n","### New Data:\n","$\\text{Reduction} \\quad$  reduction of demand for selected nodes and time periods which is 10%\n","### New Varibale:\n","$ \\text{RD}_{n,t} =\n","  \\begin{cases}\n","    1, & \\text{if we pick period } t \\in T \\text{ for node } n \\in N \\text{ to be reduced}\\\\\n","    0, & \\text{if not}\n","  \\end{cases} $ \\\n","\n","### New and Revised Contraints: \n","$$ \\sum_{n \\in N} \\text{RD}_{n,t} \\le 9,  t \\in T $$\n","$$ \\sum_{t \\in T} \\text{RD}_{n,t}  = 1,  n \\in N $$\n","\n","$$ Y_{n,t} + S_{n,t} + \\sum_{\\substack{a \\in A \\text{ s.t.} \\\\ \\text{Node2}_a = n}} X_{a,t} (1 - \\text{Loss} \\times \\text{Distance}_a) =  \n","\\text{Demand}_{n,t} \\times (1 - 0.1 \\times RD_{n,t}) + \n","\\sum_{\\substack{a \\in A \\text{ s.t.} \\\\ \\text{Node1}_a = n}} X_{a,t} , \\forall n \\in N, t \\in T $$\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Wu2rk2vwyTOS"},"source":["# Final Solution"]},{"cell_type":"code","metadata":{"id":"-Jm2-1WoyWHN"},"source":["from gurobipy import *\n","import math\n","import pandas as pd\n","\n","## Sets & Data\n","# Use pandas to import the csv files as data frames\n","nodes = pd.read_csv('nodes2.csv')\n","arcs = pd.read_csv('grid.csv')\n","\n","A = arcs['Arc']\n","N = nodes['Node']\n","\n","# Comm 1 - Generator data \n","costs = { 12: 81, 37: 73, 23: 77, 20: 62}\n","supply = { 12: 389, 37: 792, 23: 790, 20: 549}\n","\n","# Comm 2 - Transmission loss\n","loss = 0.001\n","\n","# Comm 3 - Transmission limits \n","lowlimit = 88\n","\n","highs = [12,13,14,15,16,17,26,27,28,29,34,35,38,39,46,47,128,\n","         129,136,137,148,149,150,151,152,153,156,157,188,189]\n","\n","# Calculate lengths of each arc \n","distance = [math.hypot(\n","    nodes['X'][arcs['Node1'][a]]-nodes['X'][arcs['Node2'][a]],\n","    nodes['Y'][arcs['Node1'][a]]-nodes['Y'][arcs['Node2'][a]]) for a in A]\n","\n","# Comm 4 - Make a table of demands D[n][t] for clarity later\n","T = range(6)\n","D = [[nodes['D'+str(t)][n] for t in T] for n in N]\n","Hour = 4\n","\n","# Comm 6 - Increase limit for selected arcs\n","LimitIncrease = 50\n","\n","# Comm 7 - Cost and Supply for the new small generator\n","NewCost = 69\n","NewSupply = 200\n","\n","# Comm 10 - Cost and Supply for the solar farm\n","SolarCost = 42\n","SolarSupply = [0, 20, 120, 110, 20, 0]\n","\n","# Comm 11 - Threshold Ratio for operation efficiency\n","ratio = 0.6\n","CostIncrease = 0.3\n","\n","# Comm 12 - Demand reduction value\n","Reduction = 0.1\n","\n","m = Model(\"Electrigrid\")\n","\n","## Variables\n","\n","# X gives flow on arc a in time period t\n","X = {(a,t): m.addVar() for a in A for t in T}\n","\n","# Y gives amount generated at node n in time period t \n","Y = {(n,t): m.addVar() for n in N for t in T}\n","\n","# Comm 6 - select arcs to increase the limit\n","# I is 1 if the arclimit of the arc is increased, else 0\n","I = {a: m.addVar(vtype=GRB.BINARY) for a in A}\n","\n","# Comm 7 - select a node to become a generator\n","# New is 1 if the node is a generator, else 0 \n","New = {n: m.addVar(vtype=GRB.BINARY) for n in N}\n","\n","# Comm 9 - select the running time period for the new generator\n","# R is 1 if we run the new generator during the time period, else 0\n","R = {t: m.addVar(vtype=GRB.BINARY) for t in T}\n","\n","# Comm 10 - select a node to become a solar farm\n","# Solar is 1 if the node is a generator, else 0 \n","# S is the solar electricity produced at nodes\n","Solar = {n: m.addVar(vtype=GRB.BINARY) for n in N}\n","S = {(n,t): m.addVar() for n in N for t in T}\n","\n","# Comm 11 - amount generated at each threshold\n","U = {(n,t): m.addVar() for n in N for t in T} # under\n","O = {(n,t): m.addVar() for n in N for t in T} # over\n","\n","# Comm 12 - select the reduced demand period for node n in time T\n","# RD is 1 if the time period is selected to be reduced for node n, else 0\n","RD = {(n,t): m.addVar(vtype=GRB.BINARY) for t in T for n in N}\n","\n","## Objective\n","\n","m.setObjective(quicksum(Hour*costs[n]*U[n,t] for n in N for t in T if n in costs) +\n","               quicksum(Hour*costs[n]*(1 + CostIncrease)*O[n,t] for n in N for t in T if n in costs) +               \n","               quicksum(Hour*NewCost*Y[n,t]  for n in N for t in T if n not in costs) +\n","               quicksum(Hour*SolarCost*S[n,t] for n in N for t in T))\n","\n","## Constraints\n","\n","# Variable constraints\n","m.addConstr(quicksum(I[a] for a in A if a not in highs) == 3) # Comm 6\n","m.addConstr(quicksum(New[n] for n in N if n not in supply) == 1) # Comm 7\n","m.addConstr(quicksum(R[t] for t in T) == 4) # Comm 9\n","m.addConstr(quicksum(Solar[n] for n in N) == 1) # Comm 10\n","\n","for t in T:\n","    m.addConstr(quicksum(RD[n,t] for n in N) <= 9) # Comm 12\n","    \n","for n in N:\n","    m.addConstr(quicksum(RD[n,t] for t in T) == 1) # Comm 12\n","\n","\n","m.setParam('MIPGap', 0)\n","       \n","for t in T:\n","    for a in A:\n","        # constrain maximum flow on arc a (unless it is one of the high transmission lines) \n","        if not a in highs:\n","            m.addConstr(X[a,t] <= lowlimit + LimitIncrease*I[a])\n","            \n","    for n in N:\n","        # balance flow at each node, taking into account loss on inflow arcs,\n","        # adding amount generated to LHS and demand amount to RHS\n","        m.addConstr(quicksum(X[a,t]*(1-loss*distance[a]) for a in A if arcs['Node2'][a] == n) + Y[n,t] + S[n,t] ==\n","                    quicksum(X[a,t] for a in A if arcs['Node1'][a] == n) + D[n][t] *(1 - Reduction* RD[n,t]))\n","                                                                          \n","        # Y is constrained by supply at generator nodes and must be 0 everywhere else\n","        if n in supply:\n","            # Comm 10 - set threshold\n","            m.addConstr(U[n,t] <= supply[n] * ratio)\n","            m.addConstr(O[n,t] <= supply[n] * (1 - ratio))\n","            m.addConstr(Y[n,t] <= U[n,t] + O[n,t])\n","        # Comm 8 - Node 10 cannot be the new small generator\n","        elif n == 10:\n","            m.addConstr(Y[n,t] == 0) \n","        else:\n","            # m.addConstr(Y[n,t] <= NewSupply * New[n]) # Comm 7\n","            m.addConstr(Y[n,t] <= NewSupply * New[n] * R[t]) # Comm 9\n","            \n","        # Comm 10 - S is the solar electricity supply at nodes during time periods\n","        m.addConstr(S[n,t] <= SolarSupply[t] * Solar[n])\n","\n","m.optimize()\n","\n","print(\"Transmission lines need to be updated: \")\n","for a in A:\n","    if I[a].x != 0:\n","        print(a)\n","\n","print(\"New generator node: \")\n","for n in N:\n","    if New[n].x == 1:\n","        print(n) \n","\n","print(\"New generator's operating time periods:\")\n","for t in T:\n","    if R[t].x != 0:\n","        print('D%d'%t)\n","\n","print(\"Solar farm node: \")\n","for n in N:\n","    if Solar[n].x != 0:\n","        print(n)\n","\n","reduce = {'D0':[], 'D1':[], 'D2':[], 'D3':[], 'D4':[], 'D5':[]}\n","for t in T:\n","    for n in N:\n","        if RD[n,t].x != 0:\n","            reduce['D%d'%t].append(n)\n","df = pd.DataFrame.from_dict(reduce, orient='index').transpose()\n","df.to_csv('reduce.csv', index=False)\n","\n","print(\"Optimal Cost = $\", round(m.objVal))"],"execution_count":null,"outputs":[]}]}